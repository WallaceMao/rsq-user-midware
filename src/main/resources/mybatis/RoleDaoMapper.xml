<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rishiqing.midware.user.dao.RoleDao">
    <!--基本role映射-->
    <resultMap id="roleMap" type="com.rishiqing.midware.user.model.Role">
        <id property="id" column="id"/>
        <result property="version" column="version" />
        <result property="authority" column="authority" />
    </resultMap>
    <insert
            id="saveRole"
            parameterType="com.rishiqing.midware.user.model.Role"
            flushCache="true"
            keyProperty="id"
            useGeneratedKeys="true">
        INSERT INTO `role`
        (version, authority)
        VALUES
        (#{version}, #{authority})
        ON DUPLICATE KEY UPDATE
        version = version + 1,
        authority = #{authority}
    </insert>
    <delete id="deleteRole" parameterType="com.rishiqing.midware.user.model.Role">
        DELETE FROM `role` where id = #{id}
    </delete>
    <update id="updateRole"
            parameterType="com.rishiqing.midware.user.model.Role"
            flushCache="true"
            keyProperty="id">
        UPDATE `role` SET
        version = version + 1,
        authority = #{authority}
        WHERE id = #{id}
    </update>
    <select id="getRoleList" resultMap="roleMap">
        SELECT * FROM `role`
    </select>
    <select id="getRoleById" resultMap="roleMap">
        SELECT * FROM `role` WHERE id = #{id}
    </select>
    <select id="getRoleByAuthority" resultMap="roleMap">
        SELECT * FROM `role` WHERE authority = #{authority}
    </select>

    <!--用户角色相关-->
    <resultMap id="roleUsersMap" type="com.rishiqing.midware.user.model.Role" extends="roleMap">
        <collection property="userList" resultMap="com.rishiqing.midware.user.dao.UserDao.userMap" columnPrefix="user_" />
    </resultMap>
    <select id="getRoleUserList" resultMap="roleUsersMap" parameterType="com.rishiqing.midware.user.model.Role">
        SELECT r.*,
        u.id AS user_id, 
        u.version as user_version, 
        u.account_expired as user_account_expired,
        u.account_locked as user_account_locked,
        u.enabled as user_enabled,
        u.password as user_password,
        u.password_expired as user_password_expired,
        u.username as user_username,
        u.real_name as user_real_name
        FROM `role` r
        LEFT JOIN user_role ur ON r.id = ur.role_id
        LEFT JOIN `user` u ON ur.user_id = u.id
        <where>
            <if test="id != null">r.id = #{id}</if>
            <if test="authority != null">and r.authority = #{authority}</if>
        </where>
    </select>
</mapper>